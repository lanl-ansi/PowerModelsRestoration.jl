var documenterSearchIndex = {"docs":
[{"location":"variables/","page":"Variables","title":"Variables","text":"Modules = [PowerModelsRestoration]\nPages   = [\"core/variable.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"variables/#JuMP.value-Tuple{Real}","page":"Variables","title":"JuMP.value","text":"Need because of mix of vars/real in zgen, zbranch, z_storage\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_branch_damage_indicator-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_branch_damage_indicator","text":"variable: 0 <= damage_branch[l] <= 1 for l in branches\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_bus_damage_indicator-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_bus_damage_indicator","text":"variable: 0 <= damage_bus[l] <= 1 for l in buses\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_bus_voltage_magnitude_on_off-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_bus_voltage_magnitude_on_off","text":"variable: v[i] for i in buses\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_bus_voltage_magnitude_sqr_on_off-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_bus_voltage_magnitude_sqr_on_off","text":"\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_bus_voltage_magnitude_violation-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_bus_voltage_magnitude_violation","text":"variable: v[i] for i in buses\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_gen_damage_indicator-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_gen_damage_indicator","text":"variable: 0 <= damage_gen[l] <= 1 for l in genes\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_gen_power_damage-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_gen_power_damage","text":"generates variables for both active and reactive generation\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_gen_power_imaginary_damage-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_gen_power_imaginary_damage","text":"variable: qq[j] for j in gen\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_gen_power_real_damage-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_gen_power_real_damage","text":"variable: pg[j] for j in gen\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_storage_current_damage-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_storage_current_damage","text":"do nothing by default but some formulations require this\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_storage_damage_indicator-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_storage_damage_indicator","text":"variable: 0 <= damage_storage[l] <= 1 for l in storagees\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_storage_power_control_imaginary_damage-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_storage_power_control_imaginary_damage","text":"\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_storage_power_imaginary_damage-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_storage_power_imaginary_damage","text":"\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_storage_power_mi_damage-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_storage_power_mi_damage","text":"\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsRestoration.variable_storage_power_real_damage-Tuple{PowerModels.AbstractPowerModel}","page":"Variables","title":"PowerModelsRestoration.variable_storage_power_real_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#Constraints","page":"Constraints","title":"Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"The following are constraints that PowerModelsRestoration adds.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"Modules = [PowerModelsRestoration]\nPages   = [\"core/constraint_template.jl\", \"core/constraint.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"constraints/#PowerModelsRestoration.constraint_branch_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_branch_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_bus_damage_soft-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_bus_damage_soft","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_gen_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_gen_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_load_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_load_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_model_voltage_damage-Tuple{PowerModels.AbstractPowerModel}","page":"Constraints","title":"PowerModelsRestoration.constraint_model_voltage_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_ohms_yt_from_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_ohms_yt_from_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_ohms_yt_to_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_ohms_yt_to_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_power_balance_shed-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_power_balance_shed","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_restoration_cardinality_lb-Tuple{PowerModels.AbstractPowerModel}","page":"Constraints","title":"PowerModelsRestoration.constraint_restoration_cardinality_lb","text":"Limit the minimum number of components restored in each time-step\n\n\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_restoration_cardinality_ub-Tuple{PowerModels.AbstractPowerModel}","page":"Constraints","title":"PowerModelsRestoration.constraint_restoration_cardinality_ub","text":"Limit the maximum number of components restored in each time-step\n\n\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_shunt_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_shunt_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_storage_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_storage_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_thermal_limit_from_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_thermal_limit_from_damage","text":"constraint_thermal_limit_from(pm::AbstractPowerModel, n::Int, i::Int)\n\nAdds the (upper and lower) thermal limit constraints for the desired branch to the PowerModel.\n\n\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_thermal_limit_to_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_thermal_limit_to_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_voltage_angle_difference_damage-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_voltage_angle_difference_damage","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_voltage_magnitude_bounds_soft-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_voltage_magnitude_bounds_soft","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_branch_bus_connection-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_branch_bus_connection","text":"on/off constraint for branches connected to damaged buses\n\n\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_branch_energized-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_branch_energized","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_bus_energized-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_bus_energized","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_gen_bus_connection-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_gen_bus_connection","text":"on/off constraint for generators connected to damaged buses\n\n\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_gen_energized-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_gen_energized","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_load_bus_connection-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_load_bus_connection","text":"on/off constraint for loads connected to damaged buses\n\n\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_load_increasing-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_load_increasing","text":"Load delivered at each node must be greater than or equal the previous time period\n\n\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_restoration_cardinality_lb-Tuple{PowerModels.AbstractPowerModel, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_restoration_cardinality_lb","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_restoration_cardinality_ub-Tuple{PowerModels.AbstractPowerModel, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_restoration_cardinality_ub","text":"\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_shunt_bus_connection-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_shunt_bus_connection","text":"on/off constraint for shunts connected to damaged buses\n\n\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_storage_bus_connection-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_storage_bus_connection","text":"on/off constraint for storage connected to damaged buses\n\n\n\n\n\n","category":"method"},{"location":"constraints/#PowerModelsRestoration.constraint_storage_energized-Tuple{PowerModels.AbstractPowerModel, Int64, Int64, Int64}","page":"Constraints","title":"PowerModelsRestoration.constraint_storage_energized","text":"\n\n\n\n","category":"method"},{"location":"prob/#Restoration-Order-Problem","page":"Problem","title":"Restoration Order Problem","text":"","category":"section"},{"location":"prob/","page":"Problem","title":"Problem","text":"run_rop","category":"page"},{"location":"prob/#PowerModelsRestoration.run_rop","page":"Problem","title":"PowerModelsRestoration.run_rop","text":"\n\n\n\n","category":"function"},{"location":"prob/#Resoration-Order-with-Unit-Commitment","page":"Problem","title":"Resoration Order with Unit Commitment","text":"","category":"section"},{"location":"prob/","page":"Problem","title":"Problem","text":"run_rop_uc","category":"page"},{"location":"prob/#Shared-Functions","page":"Problem","title":"Shared Functions","text":"","category":"section"},{"location":"prob/","page":"Problem","title":"Problem","text":"solution_rop!","category":"page"},{"location":"prob/#All-functions","page":"Problem","title":"All functions","text":"","category":"section"},{"location":"prob/","page":"Problem","title":"Problem","text":"Modules = [PowerModelsRestoration]\nPages   = [\"prob/rop.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"prob/#PowerModelsRestoration.build_rop-Tuple{PowerModels.AbstractPowerModel}","page":"Problem","title":"PowerModelsRestoration.build_rop","text":"\n\n\n\n","category":"method"},{"location":"prob/#PowerModelsRestoration.run_rop-Tuple{Any, Any, Any}","page":"Problem","title":"PowerModelsRestoration.run_rop","text":"\n\n\n\n","category":"method"},{"location":"data/#Data","page":"Data","title":"Data","text":"","category":"section"},{"location":"data/","page":"Data","title":"Data","text":"PowerModelsRestoration extends the base PowerModels data format by supporting a damaged key to components that need to be repaired. Currently supported components for restoration are:","category":"page"},{"location":"data/","page":"Data","title":"Data","text":"using PowerModelsRestoration #hide\nPowerModelsRestoration.restoration_components","category":"page"},{"location":"data/","page":"Data","title":"Data","text":"To specify a damaged component,  sets its damaged value to 1.","category":"page"},{"location":"data/","page":"Data","title":"Data","text":"case[\"gen\"][\"1\"][\"damaged\"]==1","category":"page"},{"location":"data/#Terminology","page":"Data","title":"Terminology","text":"","category":"section"},{"location":"data/","page":"Data","title":"Data","text":"There are three terms related to the status of components:","category":"page"},{"location":"data/","page":"Data","title":"Data","text":"active (inactive)\ndamaged\nrepairable","category":"page"},{"location":"data/","page":"Data","title":"Data","text":"The component status value, e.g. gen[\"gen_status\"]=1 determines that a component is active. The damaged status is determined by gen[\"damaged\"]=1. A component is repairable if is it active and damaged, gen[\"gen_status\"]==1 && gen[\"damaged\"]==1.","category":"page"},{"location":"data/","page":"Data","title":"Data","text":"Why? if a component is not active, it is filtered out of the network by the powermodels functions that create an optimization problem. When determining how many repairs can be done, this must be accounted for.","category":"page"},{"location":"data/","page":"Data","title":"Data","text":"In addition, this allows heuristic problems like RAD to only consider repairing subsets of items that are active, i.e. a component that is damaged but not active is for future restoration problems.","category":"page"},{"location":"data/#Data-Functions","page":"Data","title":"Data Functions","text":"","category":"section"},{"location":"data/","page":"Data","title":"Data","text":"The following functions are responsible for handling the data dictionary used in PowerModelsRestoration:","category":"page"},{"location":"data/","page":"Data","title":"Data","text":"Modules = [PowerModelsRestoration]\nPages   = [\"core/data.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"data/#PowerModelsRestoration._clean_status!-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration._clean_status!","text":"\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration._clear_damage_indicator!-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration._clear_damage_indicator!","text":"\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration._get_damaged_components-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration._get_damaged_components","text":"\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration._get_inactive_components-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration._get_inactive_components","text":"\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration._get_isolated_load-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration._get_isolated_load","text":"\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration._get_repairable_components-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration._get_repairable_components","text":"\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration._propagate_damage_status!-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration._propagate_damage_status!","text":"\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.add_load_weights!-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.add_load_weights!","text":"add_load_weights!(data::Dict{String,<:Any})\n\nAdd load weights to network data. Only supports pti files. Takes the load_ckt key ('l', 'm', 'h') and assigns a load weight key (1.0, 10.0, 100.0).\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.apply_restoration_sequence!-Tuple{Dict{String}, Dict{String}}","page":"Data","title":"PowerModelsRestoration.apply_restoration_sequence!","text":"`apply_restoration_sequence!(data::Dict{String,<:Any}, repair_order::Dict{String,<:Any})`\n\nUpdate devices status and damaged indicator based on the repair order.\n\nE.g. if a device is repaired in network id 3, then before network 3 its status is `0`\nand its `damaged` indicator is `1`.  In network 3, its status is `1` and its damaged status is `1`.\nAfter network 3, its status is `1` and its damaged indicator is `0`.\n\nBefore:\n| nw_id   |  1  |  2  |  3  |  4  |\n| ------- | --- | --- | --- | --- |\n| status  |  1  |  1  |  1  |  1  |\n| damaged |  1  |  1  |  1  |  1  |\n\nApplying repair in network 3:\n| nw_id   |  1  |  2  |  3  |  4  |\n| ------- | --- | --- | --- | --- |\n| status  |  0  |  0  |  1  |  1  |\n| damaged |  1  |  1  |  1  |  0  |\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.clean_status!-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.clean_status!","text":"clean_status!(data::Dict{String,<:Any})\n\nReplace near integer status values with integers (tol=1e-4) and set bus_type according to the status value.\n\nNon-integer statuses may occur for due to numerical tolerance, where a component status may be reported as 1e-9 by a solver.\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.clear_damage_indicator!-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.clear_damage_indicator!","text":"clear_damage_indicator!(network::Dict{String, <:Any})\n\nClear damage indicator and replace with damage=0.\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.count_active_components-Tuple{Dict{String, Any}}","page":"Data","title":"PowerModelsRestoration.count_active_components","text":"count_active_components(network::Dict{String, <:Any})\n\nCount the number of components with an active component status.\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.count_damaged_components-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.count_damaged_components","text":"count_damaged_components(network::Dict{String, <:Any})\n\nCount the number of components with key \"damaged\" == 1.\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.count_inactive_components-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.count_inactive_components","text":"count_inactive_components(network::Dict{String, <:Any})\n\nCount the number of components with an inactive component status.\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.count_repairable_components-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.count_repairable_components","text":"count_repairable_components(network::Dict{String, <:Any})\n\nReturn the number of repairable components in a network.\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.damage_components!-Tuple{Dict{String}, Dict{String, Set{String}}}","page":"Data","title":"PowerModelsRestoration.damage_components!","text":"damage_components!(nw_data::Dict{String,<:Any}, comp_list::Dict{String, Set{String}})\n\nSet the damage indicator to 1 for components in the comp_list.\n\n    julia> damage_components!(network, Dict(\"bus\"=>[\"1\",\"3\"]))\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.get_active_components-Tuple{Dict{String, Any}}","page":"Data","title":"PowerModelsRestoration.get_active_components","text":"get_active_components(network::Dict{String, <:Any})\n\nReturn a dictionary of the active component indices. A component is inactive if its status value is 1.\n\n    julia> get_active_components(network)\n    Dict{String, Set{String}} with 4 entries:\n        \"gen\"     => Set([\"4\", \"1\", \"2\"])\n        \"branch\"  => Set([\"4\", \"1\", \"5\", \"2\", \"6\", \"7\", \"3\"])\n        \"storage\" => Set([\"1\"])\n        \"bus\"     => Set([\"4\"])\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.get_damaged_components-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.get_damaged_components","text":"get_damaged_components(network::Dict{String, <:Any})\n\nReturn a dictionary of the damaged component indices. A component is damaged if \"damaged\"==1.\n\n    julia> get_damaged_components(network)\n    Dict{String, Set{String}} with 4 entries:\n        \"gen\"     => Set([\"4\", \"1\", \"2\"])\n        \"branch\"  => Set([\"4\", \"1\", \"5\", \"2\", \"6\", \"7\", \"3\"])\n        \"storage\" => Set([\"1\"])\n        \"bus\"     => Set([\"4\"])\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.get_inactive_components-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.get_inactive_components","text":"get_inactive_components(network::Dict{String, <:Any})\n\nReturn a dictionary of the inactive component indices. A component is inactive if its status value is 0.\n\n    julia> get_inactive_components(network)\n    Dict{String, Set{String}} with 4 entries:\n        \"gen\"     => Set([\"4\", \"1\", \"2\"])\n        \"branch\"  => Set([\"4\", \"1\", \"5\", \"2\", \"6\", \"7\", \"3\"])\n        \"storage\" => Set([\"1\"])\n        \"bus\"     => Set([\"4\"])\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.get_isolated_load-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.get_isolated_load","text":"get_isolated_load(data::Dict{String,<:Any})\n\nReturn a set of loads that are isolated (loads connected to an inactive bus).\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.get_repairable_components-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.get_repairable_components","text":"get_repairable_components(network::Dict{String, <:Any})\n\nReturn a dictionary of the repairable component indices. A component is repairable if \"damaged\"==1 and \"status\"=1\n\n    julia> get_repairable_components(network)\n    Dict{String, Set{String}} with 4 entries:\n        \"gen\"     => Set([\"4\", \"1\", \"2\"])\n        \"branch\"  => Set([\"4\", \"1\", \"5\", \"2\", \"6\", \"7\", \"3\"])\n        \"storage\" => Set([\"1\"])\n        \"bus\"     => Set([\"4\"])\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.make_inactive!-Tuple{Dict{String}, Dict{String, Set{String}}}","page":"Data","title":"PowerModelsRestoration.make_inactive!","text":"make_inactive!(nw_data::Dict{String,<:Any}, comp_list::Dict{String, Set{String}})\n\nSet the status indicator to 0 for components in the comp_list.\n\n    julia> make_inactive!(network, Dict(\"bus\"=>[\"1\",\"3\"]))\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.print_summary_restoration-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.print_summary_restoration","text":"print_summary_restoration(data::Dict{String,<:Any})\n\nprints a summary of a restoration solution to the terminal\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.propagate_damage_status!-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.propagate_damage_status!","text":"propagate_damage_status!(data::Dict{String,<:Any})\n\nPropagate the damaged indicator from buses to indicent branches, generators, and storage\"\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.replicate_restoration_network-Tuple{Dict{String}, Int64, Set{String}}","page":"Data","title":"PowerModelsRestoration.replicate_restoration_network","text":"replicate_restoration_network(sn_data::Dict{String,<:Any}; count::Int=1, global_keys::Set{String}=Set{String}())\n\nTransforms a single network into a multinetwork with several deepcopies of the original network. Start with nwid \"0\" before repairs are conducted, then count number of preriods where repairs are performed. Add network keys for repairs, the number of repairs that are allowed in each period, and repaired_total, the cumulative repairs in the network. Also add time_elapsed based on the number of repairs that occur in the following period.\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.replicate_restoration_network-Tuple{Dict{String}, Int64}","page":"Data","title":"PowerModelsRestoration.replicate_restoration_network","text":"replicate_restoration_network(sn_data::Dict{String,<:Any}; count::Int=1, global_keys::Set{String}=Set{String}())\n\nTransforms a single network into a multinetwork with several deepcopies of the original network. Start with nwid \"0\" before repairs are conducted, then count number of preriods where repairs are performed. Add network keys for repairs, the number of repairs that are allowed in each period, and repaired_total, the cumulative repairs in the network. Also add time_elapsed based on the number of repairs that occur in the following period.\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.replicate_restoration_network-Tuple{Dict{String}}","page":"Data","title":"PowerModelsRestoration.replicate_restoration_network","text":"replicate_restoration_network(sn_data::Dict{String,<:Any}; count::Int=1, global_keys::Set{String}=Set{String}())\n\nTransforms a single network into a multinetwork with several deepcopies of the original network. Start with nwid \"0\" before repairs are conducted, then count number of preriods where repairs are performed. Add network keys for repairs, the number of repairs that are allowed in each period, and repaired_total, the cumulative repairs in the network. Also add time_elapsed based on the number of repairs that occur in the following period.\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.summary_restoration-Tuple{IO, Dict{String}}","page":"Data","title":"PowerModelsRestoration.summary_restoration","text":"summary_restoration(io::IO, data::Dict{String,<:Any})\n\nprints a summary of a restoration solution\n\n\n\n\n\n","category":"method"},{"location":"data/#PowerModelsRestoration.update_status!-Tuple{Dict{String}, Dict{String}}","page":"Data","title":"PowerModelsRestoration.update_status!","text":"update_status!(network_1::Dict{String, <:Any}, network_2::Dict{String, <:Any})\n\nUpdate the status values in network1 with values from network2. Supports sparse networks.\n\n\n\n\n\n","category":"method"},{"location":"#PowerModelsRestoration.jl-Documentation","page":"Home","title":"PowerModelsRestoration.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PowerModelsRestoration","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The latest stable release of PowerModelsRestoration can be installed using the Julia package manager with","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add PowerModelsRestoration","category":"page"},{"location":"","page":"Home","title":"Home","text":"For the current development version, \"checkout\" this package with","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add PowerModelsRestoration#master","category":"page"},{"location":"","page":"Home","title":"Home","text":"At least one solver is required for running PowerModelsRestoration.  The open-source solver Ipopt is recommended, as it is fast, scaleable and can be used to solve a wide variety of the problems and network formulations provided in PowerModels.  The Ipopt solver can be installed via the package manager with","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add Ipopt","category":"page"},{"location":"","page":"Home","title":"Home","text":"Test that the package works by running","category":"page"},{"location":"","page":"Home","title":"Home","text":"] test PowerModelsRestoration","category":"page"},{"location":"#Maximum-Load-Delivery-Quick-Start","page":"Home","title":"Maximum Load Delivery Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The primary entry point of the Maximum Load Delivery (MLD) problem is the PowerModelsRestoration.run_ac_mld_uc function, which provides a scalable heuristic for solving the AC-MLD problem. The following example illustrates how to load a network, damage components and solve the AC-MLD problem.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using PowerModels; using PowerModelsRestoration; using Ipopt\nnetwork_file = joinpath(dirname(pathof(PowerModels)), \"../test/data/matpower/case5.m\")\ncase = PowerModels.parse_file(network_file)\n\ncase[\"bus\"][\"2\"][\"bus_type\"] = 4\ncase[\"gen\"][\"2\"][\"gen_status\"] = 0\ncase[\"branch\"][\"7\"][\"br_status\"] = 0\n\nresult = PowerModelsRestoration.run_ac_mld_uc(case, with_optimizer(Ipopt.Optimizer))","category":"page"},{"location":"","page":"Home","title":"Home","text":"The result data indicates that only 700 of the 1000 MWs can be delivered given the removal of bus 2, generator 2 and branch 7.","category":"page"},{"location":"form/#ACP","page":"Form","title":"ACP","text":"","category":"section"},{"location":"form/","page":"Form","title":"Form","text":"Modules = [PowerModelsRestoration]\nPages   = [\"form/acp.jl\", \"form/shared.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"form/#PowerModelsRestoration.constraint_bus_damage_soft-Tuple{PowerModels.AbstractACPModel, Int64, Int64, Any, Any}","page":"Form","title":"PowerModelsRestoration.constraint_bus_damage_soft","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_model_voltage_damage-Tuple{PowerModels.AbstractACPModel, Int64}","page":"Form","title":"PowerModelsRestoration.constraint_model_voltage_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_power_balance_shed-Tuple{PowerModels.AbstractACPModel, Int64, Int64, Any, Any, Any, Any, Any, Any, Any, Any, Any}","page":"Form","title":"PowerModelsRestoration.constraint_power_balance_shed","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_voltage_magnitude_bounds_soft-Tuple{PowerModels.AbstractACPModel, Int64, Int64, Any, Any}","page":"Form","title":"PowerModelsRestoration.constraint_voltage_magnitude_bounds_soft","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.variable_bus_voltage_damage-Tuple{PowerModels.AbstractACPModel}","page":"Form","title":"PowerModelsRestoration.variable_bus_voltage_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_power_balance_shed-Tuple{Union{PowerModels.AbstractACTModel, PowerModels.AbstractBFModel, PowerModels.AbstractWRConicModel, PowerModels.AbstractWRMModel, PowerModels.AbstractWRModel}, Int64, Int64, Any, Any, Any, Any, Any, Any, Any, Any, Any}","page":"Form","title":"PowerModelsRestoration.constraint_power_balance_shed","text":"\n\n\n\n","category":"method"},{"location":"form/#DCP","page":"Form","title":"DCP","text":"","category":"section"},{"location":"form/","page":"Form","title":"Form","text":"Modules = [PowerModelsRestoration]\nPages   = [\"form/apo.jl\", \"form/dcp.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"form/#PowerModelsRestoration.variable_gen_power_imaginary_damage-Tuple{PowerModels.AbstractActivePowerModel}","page":"Form","title":"PowerModelsRestoration.variable_gen_power_imaginary_damage","text":"apo models ignore reactive power flows\n\n\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.variable_storage_power_imaginary_damage-Tuple{PowerModels.AbstractActivePowerModel}","page":"Form","title":"PowerModelsRestoration.variable_storage_power_imaginary_damage","text":"apo models ignore reactive power flows\n\n\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_bus_damage_soft-Tuple{PowerModels.AbstractDCPModel, Int64, Int64, Any, Any}","page":"Form","title":"PowerModelsRestoration.constraint_bus_damage_soft","text":"no vm values to turn off\n\n\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_power_balance_shed-Tuple{PowerModels.AbstractDCPModel, Int64, Int64, Any, Any, Any, Any, Any, Any, Any, Any, Any}","page":"Form","title":"PowerModelsRestoration.constraint_power_balance_shed","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_voltage_magnitude_bounds_soft-Tuple{PowerModels.AbstractDCPModel, Int64, Int64, Any, Any}","page":"Form","title":"PowerModelsRestoration.constraint_voltage_magnitude_bounds_soft","text":"no vm values to turn off\n\n\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.variable_bus_voltage_damage-Tuple{PowerModels.AbstractDCPModel}","page":"Form","title":"PowerModelsRestoration.variable_bus_voltage_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#WR","page":"Form","title":"WR","text":"","category":"section"},{"location":"form/","page":"Form","title":"Form","text":"Modules = [PowerModelsRestoration]\nPages   = [\"form/shared.jl\", \"form/wr.jl\", \"form/wrm.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"form/#PowerModels.constraint_power_magnitude_sqr_on_off-Tuple{PowerModels.AbstractQCWRModel, Int64, Any, Any, Any, Any}","page":"Form","title":"PowerModels.constraint_power_magnitude_sqr_on_off","text":"p[arc_from]^2 + q[arc_from]^2 <= w[f_bus]/tm*ccm[i]\n\n\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_bus_damage_soft-Tuple{PowerModels.AbstractWRModel, Int64, Int64, Any, Any}","page":"Form","title":"PowerModelsRestoration.constraint_bus_damage_soft","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_model_voltage_damage-Tuple{PowerModels.AbstractWRModel, Int64}","page":"Form","title":"PowerModelsRestoration.constraint_model_voltage_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_ohms_yt_from_damage-Tuple{PowerModels.AbstractWRModel, Int64}","page":"Form","title":"PowerModelsRestoration.constraint_ohms_yt_from_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_ohms_yt_to_damage-Tuple{PowerModels.AbstractWRModel, Int64}","page":"Form","title":"PowerModelsRestoration.constraint_ohms_yt_to_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_voltage_magnitude_bounds_soft-Tuple{PowerModels.AbstractWRModel, Int64, Int64, Any, Any}","page":"Form","title":"PowerModelsRestoration.constraint_voltage_magnitude_bounds_soft","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_voltage_magnitude_sqr_from_damage-Tuple{PowerModels.AbstractWRModel, Int64}","page":"Form","title":"PowerModelsRestoration.constraint_voltage_magnitude_sqr_from_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_voltage_magnitude_sqr_to_damage-Tuple{PowerModels.AbstractWRModel, Int64}","page":"Form","title":"PowerModelsRestoration.constraint_voltage_magnitude_sqr_to_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.constraint_voltage_product_damage-Tuple{PowerModels.AbstractWRModel, Int64}","page":"Form","title":"PowerModelsRestoration.constraint_voltage_product_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.variable_bus_voltage_damage-Tuple{PowerModels.AbstractWRModel}","page":"Form","title":"PowerModelsRestoration.variable_bus_voltage_damage","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.variable_bus_voltage_magnitude_sqr_violation-Tuple{PowerModels.AbstractPowerModel}","page":"Form","title":"PowerModelsRestoration.variable_bus_voltage_magnitude_sqr_violation","text":"\n\n\n\n","category":"method"},{"location":"form/#PowerModelsRestoration.variable_storage_current_damage-Tuple{PowerModels.AbstractWRModel}","page":"Form","title":"PowerModelsRestoration.variable_storage_current_damage","text":"this is the same as non-damaged version becouse ccms includes zero\n\n\n\n\n\n","category":"method"},{"location":"util/","page":"Utility Functions","title":"Utility Functions","text":"# process_network\nrun_restoration_redispatch\nrun_rop_heuristic","category":"page"},{"location":"util/#PowerModelsRestoration.run_restoration_redispatch","page":"Utility Functions","title":"PowerModelsRestoration.run_restoration_redispatch","text":"Simulate a restoration sequence power flow\n\n\n\n\n\nSimulate a restoration sequence power flow\n\n\n\n\n\n","category":"function"},{"location":"util/","page":"Utility Functions","title":"Utility Functions","text":"Modules = [PowerModelsRestoration]\nPages   = [\"util/common.jl\", \"util/forward_restoration.jl\", \"heuristic.jl\"]\nOrder   = [:function]\nPrivate  = true","category":"page"},{"location":"util/#PowerModelsRestoration._build_partial_rop-Tuple{PowerModels.AbstractPowerModel}","page":"Utility Functions","title":"PowerModelsRestoration._build_partial_rop","text":"\n\n\n\n","category":"method"},{"location":"util/#PowerModelsRestoration._count_component_repairs-Tuple{Any}","page":"Utility Functions","title":"PowerModelsRestoration._count_component_repairs","text":"count repairs in each period of the solution data\n\n\n\n\n\n","category":"method"},{"location":"util/#PowerModelsRestoration._count_cumulative_component_repairs-Tuple{Any}","page":"Utility Functions","title":"PowerModelsRestoration._count_cumulative_component_repairs","text":"count the cumulative repairs in each period of the solution data\n\n\n\n\n\n","category":"method"},{"location":"util/#PowerModelsRestoration._fill_missing_variables!-Tuple{Dict{String}, Dict{String}}","page":"Utility Functions","title":"PowerModelsRestoration._fill_missing_variables!","text":"    `_fill_missing_variables!(sol::Dict{String,<:Any}, network::Dict{String,<:Any})`\nadd network values for components removed for status=0 from solution\n\n\n\n\n\n","category":"method"},{"location":"util/#PowerModelsRestoration._run_partial_rop-Tuple{Any, Any, Any}","page":"Utility Functions","title":"PowerModelsRestoration._run_partial_rop","text":"Variation of run_rop that permits some load not to be restored in final period. Useful for partial restoration of a network in rop heuristics\n\n\n\n\n\n","category":"method"},{"location":"util/#PowerModelsRestoration._single_repair_restoration_network","page":"Utility Functions","title":"PowerModelsRestoration._single_repair_restoration_network","text":"Create a restoration network with 1 repair per time period. Final period will contain remainder repairs.\n\n\n\n\n\n","category":"function"},{"location":"util/#PowerModelsRestoration.get_component_activations-Tuple{Any}","page":"Utility Functions","title":"PowerModelsRestoration.get_component_activations","text":"get repairs in each period of the solution data\n\n\n\n\n\n","category":"method"},{"location":"util/#PowerModelsRestoration.merge_solution!-Tuple{Any, Any}","page":"Utility Functions","title":"PowerModelsRestoration.merge_solution!","text":"Update sol1 dictionary with sol2 dictionary. termination_status, primal_status, and dual_status values are the maximum of the MOI status code. solvetime,objective, and objective_lb are accumulated. The solution dictionary is merged using PowerModels.update_data(sol_1[\"solution\"],sol_2[\"solution\"]).\n\n\n\n\n\n","category":"method"}]
}
